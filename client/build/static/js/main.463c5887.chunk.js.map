{"version":3,"sources":["components/Order/Order.css","components/BuildControls/BuildControl/BuildControl.css","components/Burger/OrderSummary/OrderSummary.css","components/Burger/CheckoutSammary/CheckoutSummary.css","components/Burger/BurgerIngredients/BurgerIngredients.css","components/Navigation/SideDrawer/SideDrawer.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/BuildControls/BuildControls.css","components/UI/Modal/Modal.css","hoc/Layouts/Layout.css","components/Navigation/NavigationItems/NavigationItems.css","components/Logo/Logo.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","containers/Checkout/Checkout/Checkout.css","hoc/Auxiliary/Auxiliary.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layouts/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/BuildControls/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/Burger/OrderSummary/OrderSummary.js","store/actions/actionTypes.js","store/actions/order.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Burger/CheckoutSammary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","registerServiceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js","containers/Checkout/ContactData/ContactData.css"],"names":["module","exports","aux","props","children","navigationItem","className","classes","NavigationItem","isActive","Active","onClick","onSideDrawerClosed","exact","to","link","activeClassName","navigationItems","NavigationItems","logo","Logo","style","height","src","alt","toolbar","Toolbar","clicked","ToggleWrap","showSideDrawer","active","MobileOnly","ToggleBar","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attahcedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","sideDrawerClosedHandler","setState","sideDrawerHnadler","prevState","this","content","Component","BurgerIngredients","ingredients","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","tranformedIngredients","Object","keys","map","ingredientsKey","Array","amount","_","index","reduce","arr","el","concat","length","Burger","buildControl","ControlItem","ControlLabel","label","UnitPrice","ingsPrice","ControlButtons","ControlButton","ControlButtonLess","less","disabled","disabledInfo","Ing_Value","ingsAmount","ControlButtonAdd","add","controls","buildControls","BuildControl","TotalPrice","parseFloat","price","toFixed","ctrl","purchasable","ingsTotalPrice","priceUnit","showModal","OrderButton","Modal","nextProps","nextState","hide","OrderSummary","summary","key","SummaryItem","Summary_SubItem","Header","totalPrice","ButtonSection","Button","ButtonSucces","orderConfirmed","ButtonCancel","orderCancelled","ADD_INGREDIENT","REMOVE_INGREDIENT","CLEAR_BURGER_BUILDER_STATE","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","purchaseBurgerSuccess","response","orderData","actionTypes","order","purchaseBurger","dispatch","axios","post","then","data","catch","error","purchaseBurgerFail","BurgerBuilder","purchasing","showModalHandler","purchaseCancelHandler","orderConfirmHandler","clearState","history","push","sum","ings","onIngredientAdded","onIngredientRemoved","connect","burgerBuilder","ingName","ingredientName","CheckoutSummary","name","checkoutSummary","ig","checkoutContinued","checkoutCancelled","ContactData","orderForm","elementType","elementConfig","placeholder","value","validation","require","valid","touched","street","zipCode","minLength","maxLength","country","email","deliveryMethod","options","displayValue","loading","orderHandler","event","preventDefault","fromData","formElementIdentifier","orderItems","item","ingredient","fullname","zipcode","success","onOrderBurger","checkValidaty","rules","isValid","trim","inputChangeHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","redirect","setTimeout","orderResult","_id","formElementArray","id","config","msg","MessageBox","Green","message","Red","messages","i","ErrorItem","ErrorParam","param","MessageText","ContactForm","HeaderForm","formElement","inputElement","inputeClasses","InputElement","Invalid","onChange","option","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","path","match","component","Order","onStartInitialize","params","onClearBurgerBuilderState","orderItem","SummarySubItem","Amount","Price","OrderBox","Order_Info","Order_Info_Item","FullWidth","burgerbuilder","orderId","get","Orders","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","initialState","salad","bacon","cheese","meat","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.463c5887.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderBox\":\"Order_OrderBox__3J9lL\",\"SummaryItem\":\"Order_SummaryItem__1spJc\",\"Summary_SubItem\":\"Order_Summary_SubItem__17NVQ\",\"TotalPrice\":\"Order_TotalPrice__2I0Qk\",\"Amount\":\"Order_Amount___gWqH\",\"SummarySubItem\":\"Order_SummarySubItem__1ZKZt\",\"Price\":\"Order_Price__2PhO_\",\"Header\":\"Order_Header__3IVHX\",\"Order_Info_Item\":\"Order_Order_Info_Item__s6FWC\",\"Order_Info\":\"Order_Order_Info__1Z6ds\",\"FullWidth\":\"Order_FullWidth__2Da_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlItem\":\"BuildControl_ControlItem__IZUB3\",\"ControlLabel\":\"BuildControl_ControlLabel__2Mj9C\",\"ControlButtons\":\"BuildControl_ControlButtons__2K2eH\",\"ControlButton\":\"BuildControl_ControlButton__15cV1\",\"ControlButtonLess\":\"BuildControl_ControlButtonLess__L9g4k\",\"ControlButtonAdd\":\"BuildControl_ControlButtonAdd__yupEH\",\"UnitPrice\":\"BuildControl_UnitPrice__2So5S\",\"Ing_Value\":\"BuildControl_Ing_Value__28P6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Summary_SubItem\":\"OrderSummary_Summary_SubItem__2w-p1\",\"SummaryItem\":\"OrderSummary_SummaryItem__2UF_I\",\"Header\":\"OrderSummary_Header__3BffH\",\"TotalPrice\":\"OrderSummary_TotalPrice__3YH39\",\"Button\":\"OrderSummary_Button__3AlXa\",\"ButtonSucces\":\"OrderSummary_ButtonSucces__2ACDj\",\"ButtonCancel\":\"OrderSummary_ButtonCancel__3dwrv\",\"ButtonSection\":\"OrderSummary_ButtonSection__1ega5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Summary_SubItem\":\"CheckoutSummary_Summary_SubItem__1AofD\",\"SummaryItem\":\"CheckoutSummary_SummaryItem__3mFhA\",\"Header\":\"CheckoutSummary_Header__2jXja\",\"TotalPrice\":\"CheckoutSummary_TotalPrice__1Xk6v\",\"Button\":\"CheckoutSummary_Button__x5sQl\",\"ButtonSucces\":\"CheckoutSummary_ButtonSucces__1vCOI\",\"ButtonCancel\":\"CheckoutSummary_ButtonCancel__w1wOE\",\"ButtonSection\":\"CheckoutSummary_ButtonSection__28ySv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__3rhzj\",\"BreadTop\":\"BurgerIngredients_BreadTop__2lLl4\",\"Seeds1\":\"BurgerIngredients_Seeds1__2kTJv\",\"Seeds2\":\"BurgerIngredients_Seeds2__2LnYA\",\"Meat\":\"BurgerIngredients_Meat__29qD2\",\"Cheese\":\"BurgerIngredients_Cheese__1_eR3\",\"Salad\":\"BurgerIngredients_Salad__22YOn\",\"Bacon\":\"BurgerIngredients_Bacon__YTM3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1tiKS\",\"Open\":\"SideDrawer_Open__2B_ht\",\"Close\":\"SideDrawer_Close__1b1YQ\",\"MobileOnly\":\"SideDrawer_MobileOnly__l5MSd\",\"DesktopOnly\":\"SideDrawer_DesktopOnly__3I6EC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__14Dns\",\"ToggleWrap\":\"Toolbar_ToggleWrap__1P0Re\",\"ToggleBar\":\"Toolbar_ToggleBar__33y2a\",\"active\":\"Toolbar_active___gjwD\",\"MobileOnly\":\"Toolbar_MobileOnly__1Kx8r\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3Pcvp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1ADK3\",\"Active\":\"NavigationItem_Active__2zMMV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControls_BuildControl__3hEIu\",\"TotalPrice\":\"BuildControls_TotalPrice__3uxiC\",\"OrderButton\":\"BuildControls_OrderButton__3X6oQ\",\"enable\":\"BuildControls_enable__1HdkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__XaTdM\",\"active\":\"Modal_active__-b9RH\",\"hide\":\"Modal_hide__22kTv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__3nWHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3817I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2hz3u\",\"DesktopOnly\":\"Logo_DesktopOnly__1hsbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2ZjN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2in2R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkout\":\"Checkout_Checkout__iegkv\"};","const aux = (props) => props.children;\r\nexport default aux;","import React from 'react';\r\nimport classes from './NavigationItem.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n        <li className={`${classes.NavigationItem} ${props.isActive ? classes.Active : ''}`}>\r\n            <NavLink onClick={props.onSideDrawerClosed} exact to={props.link} activeClassName={classes.Active}>\r\n                {props.children}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\nimport classes from './NavigationItems.css'\r\n\r\n\r\nconst navigationItems = (props) => {\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem onSideDrawerClosed={props.onSideDrawerClosed} link=\"/\">Burger Builder</NavigationItem>\r\n            {/* <NavigationItem link=\"/orders\">Orders</NavigationItem> */}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default navigationItems;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport classes from './Logo.css';\r\nimport Logo from '../../assets/images/burger-logo.png'\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{ height: props.height }}>\r\n        <img src={Logo} alt='LogoBurger' />\r\n    </div>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport classes from './Toolbar.css'\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <div onClick={props.clicked} className={`${classes.ToggleWrap} ${props.showSideDrawer ? classes.active : ''} ${classes.MobileOnly}`}>\r\n                <span className={`${classes.ToggleBar}`}></span>\r\n            </div>\r\n            <Logo />\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems />\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.css'\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div onClick={props.clicked} className={`${classes.Backdrop} ${props.className ? props.className : ''}`}></div> : null\r\n    )\r\n}\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './SideDrawer.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attahcedClasses = [classes.SideDrawer, classes.Close ,classes.MobileOnly];\r\n    if (props.open) {\r\n        attahcedClasses = [classes.SideDrawer, classes.Open , classes.MobileOnly];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop className={classes.MobileOnly} clicked={props.closed} show={props.open} />\r\n            <div className={attahcedClasses.join(' ')}>\r\n                <NavigationItems onSideDrawerClosed={props.closed} />\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false });\r\n    }\r\n\r\n    sideDrawerHnadler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar clicked={this.sideDrawerHnadler} showSideDrawer={this.state.showSideDrawer} />\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\r\n                <main className={`container  ${classes.content}`}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredients.css';\r\n\r\n\r\nclass BurgerIngredients extends Component {\r\n    render() {\r\n        let ingredients = null;\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredients = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredients = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredients = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredients = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredients = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredients = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredients = null;\r\n        }\r\n\r\n        return ingredients;\r\n    }\r\n\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredients;","import React from 'react';\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\nimport classes from './Burger.css';\r\n\r\nconst burger = (props) => {\r\n    let tranformedIngredients = Object.keys(props.ingredients) // {\"meat\", \"cheese\",...}\r\n        .map(ingredientsKey => {\r\n            return [...Array(props.ingredients[ingredientsKey].amount)].map((_, index) => {\r\n                return <BurgerIngredients key={ingredientsKey + index} type={ingredientsKey} />\r\n            })\r\n        }).reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n    if (tranformedIngredients.length === 0) {\r\n        tranformedIngredients = (<div>Add some gredient!</div>);\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredients type='bread-top' />\r\n            {tranformedIngredients}\r\n            <BurgerIngredients type='bread-bottom' />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.css'\r\n\r\nconst buildControl = (props) => {\r\n    return (\r\n        <div className={classes.ControlItem}>\r\n            <div className={classes.ControlLabel}>\r\n                {props.label}\r\n                <div className={classes.UnitPrice}>(${props.ingsPrice})</div>\r\n            </div>\r\n            <div className={classes.ControlButtons}>\r\n                <button className={`${classes.ControlButton} ${classes.ControlButtonLess}`} onClick={props.less} disabled={props.disabledInfo}>Less</button>\r\n                <span className={classes.Ing_Value}>{props.ingsAmount}</span>\r\n                <button className={`${classes.ControlButton} ${classes.ControlButtonAdd}`} onClick={props.add}>More</button>\r\n            </div>\r\n            {/* <div>Price:{parseFloat(props.ingsTotalPrice).toFixed(2)}</div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport classes from './BuildControls.css';\r\n\r\nconst controls = [\r\n    { label: 'Meat', type: 'meat' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Cheese', type: 'cheese' }\r\n]\r\n// const PRICE_INGREDIENTS = {\r\n//     salad: 0.47,\r\n//     bacon: 0.87,\r\n//     meat: 1.79,\r\n//     cheese: 0.43,\r\n// }\r\n\r\nconst buildControls = (props) => {\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <p className={classes.TotalPrice}>{parseFloat(props.price).toFixed(2)}</p>\r\n            {\r\n                controls.map(ctrl => {\r\n                    return (\r\n                        <BuildControl\r\n                            key={ctrl.label}\r\n                            label={ctrl.label}\r\n                            add={() => props.add(ctrl.type)}\r\n                            less={() => props.less(ctrl.type)}\r\n                            disabledInfo={props.disabledInfo[ctrl.type]}\r\n                            purchasable={props.purchasable}\r\n                            ingsAmount= {props.ingredients[ctrl.type].amount}\r\n                            ingsTotalPrice= {props.ingredients[ctrl.type].price}\r\n                            ingsPrice= {props.ingredients[ctrl.type].priceUnit}\r\n                            price = {props.price}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n            <button onClick={props.showModal} className={classes.OrderButton} disabled={!props.purchasable}>Purchase</button>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Modal.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n       return nextProps.show !== this.props.show;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.clicked} />\r\n                <div className={`${classes.Modal} ${this.props.show ? classes.active : classes.hide}`}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    show: PropTypes.bool.isRequired\r\n}\r\n\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport classes from './OrderSummary.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nclass OrderSummary extends Component {\r\n    render() {\r\n        const summary = Object.keys(this.props.ingredients).map(key => {\r\n            return (\r\n                <li className={classes.SummaryItem} key={key}>\r\n                    <span className={classes.Summary_SubItem}>{key}: </span> <span>{this.props.ingredients[key].amount}</span>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <Aux>\r\n                <h3 className={classes.Header}>Order Summary</h3>\r\n                <ul>\r\n                    {summary}\r\n                </ul>\r\n                <p className={classes.TotalPrice}>Total Price: <span>${parseFloat(this.props.totalPrice).toFixed(2)}</span></p>\r\n                <div className={classes.ButtonSection}>\r\n                    <button className={`${classes.Button} ${classes.ButtonSucces}`} onClick={this.props.orderConfirmed}>Order</button>\r\n                    <button className={`${classes.Button} ${classes.ButtonCancel}`} onClick={this.props.orderCancelled}>Cancel</button>\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nexport default OrderSummary;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const CLEAR_BURGER_BUILDER_STATE = 'CLEAR_BURGER_BUILDER_STATE';\r\n\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const ORDER_SUCCESS_INIT = 'ORDER_SUCCESS_INIT';\r\nexport const CLEAR_ORDER_STATE = 'CLEAR_ORDER_STATE';\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const purchaseBurgerSuccess = (response, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        order: response\r\n    };\r\n};\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        // dispatch(purchaseBurgerStart());\r\n        axios.post('/api/order', orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data, orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error))\r\n            });\r\n    }\r\n};\r\n\r\nexport const initOrderSuccess = (orderId) => {\r\n    return dispatch => {\r\n        axios.get(`/api/getorder/?orderId=${orderId}`)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data, null));\r\n            });\r\n    }\r\n}\r\n\r\nexport const clearOrderState = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n\r\n// import * as actionTypes from '../../store/action';\r\nimport * as burgerBuilderActions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     // this.state = {...};\r\n    // }\r\n    state = {\r\n        // ingredients:{},\r\n        // purchasable: false,\r\n        purchasing: false,\r\n        // totalPrice: 4,\r\n    };\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     let oldVal = this.state.ingredients[type];\r\n    //     let updatedIngredients = { ...this.state.ingredients }\r\n    //     updatedIngredients[type] = oldVal + 1;\r\n    //     const price = +PRICE_INGREDIENTS[type];\r\n    //     let oldPrice = +this.state.totalPrice;\r\n    //     const newPrice = oldPrice + price;\r\n    //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    //     this.purchasable(updatedIngredients);\r\n    // };\r\n\r\n    // lessIngredientHandler = (type) => {\r\n    //     let oldVal = this.state.ingredients[type];\r\n    //     if (oldVal <= 0) {\r\n    //         return;\r\n    //     }\r\n    //     let updatedIngredients = { ...this.state.ingredients }\r\n    //     updatedIngredients[type] = oldVal - 1;\r\n    //     const price = +PRICE_INGREDIENTS[type];\r\n    //     let oldPrice = +this.state.totalPrice;\r\n    //     const newPrice = oldPrice - price;\r\n    //     this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    //     this.purchasable(updatedIngredients);\r\n    // }\r\n\r\n    purchasable(ingredients) {\r\n        const sum = Object.keys(ingredients)  // ==> [\"salad\",\"meat\",...]\r\n            .map(key => {\r\n                return ingredients[key].amount; // ==> [\"2\",\"4\",...]\r\n            }).reduce((sum, el) => {\r\n                return sum + el; // ==> 6\r\n            }, 0);\r\n        // this.setState({ purchasable: sum > 0 });\r\n        return sum > 0;\r\n    }\r\n\r\n\r\n    showModalHandler = () => {\r\n        this.setState({ purchasing: true });\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    orderConfirmHandler = () => {\r\n        this.props.clearState();\r\n        this.props.history.push('/checkout');\r\n    }\r\n    // CREATE QUERY STRING PARAMS\r\n    // orderConfirmHandler = () => {\r\n    //     const queryParams = [];\r\n    //     for (let i in this.state.ingredients) {\r\n    //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n    //     }\r\n    //     // queryParams.push('price=' + this.state.totalPrice);\r\n    //     const queryString = queryParams.join('&');\r\n    //     this.props.history.push({\r\n    //         pathname: '/checkout',\r\n    //         search: '?' + queryString\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n        let disabledInfo = { ...this.props.ings };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = parseFloat(disabledInfo[key].price) <= 0;\r\n        }\r\n        // salad:false, meat:true\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} clicked={this.purchaseCancelHandler}>\r\n                    <OrderSummary ingredients={this.props.ings} orderCancelled={this.purchaseCancelHandler} orderConfirmed={this.orderConfirmHandler} totalPrice={this.props.price} />\r\n                </Modal>\r\n                <Burger ingredients={this.props.ings} />\r\n                <BuildControls\r\n                    add={this.props.onIngredientAdded}\r\n                    less={this.props.onIngredientRemoved}\r\n                    disabledInfo={disabledInfo}\r\n                    amount={this.props.amount}\r\n                    ingredients={this.props.ings}\r\n                    price={this.props.price}\r\n                    purchasable={this.purchasable(this.props.ings)}\r\n                    showModal={this.showModalHandler}\r\n                />\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        amount: state.burgerBuilder.amount,\r\n    }\r\n}\r\n// const mapDispathToProps = dispatch => {\r\n//     return {\r\n//         onIngredientAdded: (ingName) => dispatch({ type: actionTypes.ADD_INGREDIENT, ingredientName: ingName }),\r\n//         onIngredientRemoved: (ingName) => dispatch({ type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName })\r\n//     }\r\n// }\r\nconst mapDispathToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n        clearState: () => dispatch(burgerBuilderActions.clearOrderState())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(BurgerBuilder);","import * as actionTypes from './actionTypes';\r\n// Action creators\r\nexport const addIngredient  = (name) =>{\r\n    return{\r\n        type : actionTypes.ADD_INGREDIENT,\r\n        ingredientName : name\r\n    }\r\n}\r\nexport const removeIngredient  = (name) =>{\r\n    return{\r\n        type : actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName : name\r\n    }\r\n}\r\nexport const clearBurgerBuilderState = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_BURGER_BUILDER_STATE\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport classes from './CheckoutSummary.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nclass CheckoutSummary extends Component {\r\n\r\n    render() {\r\n        let ingredients = [];\r\n        for (let ingredientName in this.props.ingredients) {\r\n            ingredients.push({ name: ingredientName, amount: this.props.ingredients[ingredientName].amount });\r\n        }\r\n        const checkoutSummary = ingredients.map(ig => {\r\n            return (\r\n                <li className={classes.SummaryItem} key={ig.name}>\r\n                    <span className={classes.Summary_SubItem} >{ig.name} :</span> <span>{ig.amount}</span>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <Aux>\r\n                <h3 className={classes.Header}>Checkout Summary</h3>\r\n                <ul>\r\n                    {checkoutSummary}\r\n                </ul>\r\n                <p className={classes.TotalPrice}>Total Price: <span>${parseFloat(this.props.totalPrice).toFixed(2)}</span></p>\r\n                <div className={classes.ButtonSection}>\r\n                    <button className={`${classes.Button} ${classes.ButtonSucces}`} onClick={this.props.checkoutContinued}>Continue</button>\r\n                    <button className={`${classes.Button} ${classes.ButtonCancel}`} onClick={this.props.checkoutCancelled}>Cancel</button>\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nexport default CheckoutSummary;","import React, { Component } from \"react\";\r\nimport classes from './ContactData.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\n\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    require: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    require: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    require: true,\r\n                    minLength: 1,\r\n                    maxLength: 10\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    require: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    require: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'express', displayValue: 'Express(Fastest)' },\r\n                        { value: 'normal', displayValue: 'Normal' }\r\n                    ],\r\n                    placeholder: 'Delivery Method'\r\n                },\r\n                value: 'express',\r\n                validation: {},\r\n                valid: true,\r\n                touched: false\r\n            },\r\n        },\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const fromData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            fromData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const orderItems = Object.keys(this.props.ings)\r\n            .map(ingredientName => {\r\n                return {\r\n                    item: {\r\n                        ingredient: ingredientName,\r\n                        amount: this.props.ings[ingredientName].amount,\r\n                        priceUnit: this.props.ings[ingredientName].priceUnit\r\n                    },\r\n                    price: parseFloat(this.props.ings[ingredientName].price).toFixed(2)\r\n                }\r\n            });\r\n        const order = {\r\n            fullname: fromData.name,\r\n            street: fromData.street,\r\n            zipcode: fromData.zipCode,\r\n            country: fromData.country,\r\n            email: fromData.email,\r\n            orderItems: orderItems,\r\n            totalPrice: parseFloat(this.props.price).toFixed(2),\r\n            success: true,\r\n            deliveryMethod: fromData.deliveryMethod\r\n        }\r\n        this.props.onOrderBurger(order);\r\n    }\r\n\r\n    checkValidaty = (value, rules) => {\r\n        let isValid = true;\r\n        if (rules.require) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangeHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = { ...this.state.orderForm };\r\n        const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidaty(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        this.setState({ orderForm: updatedOrderForm });\r\n    }\r\n\r\n    redirect = () => {\r\n        setTimeout(() => {\r\n            this.props.history.push(`/order/${this.props.orderResult.order._id}`);\r\n        }, 2000);\r\n    }\r\n\r\n    // inputErrorHandeler = (messages) => {\r\n    //     const updatedOrderForm = { ...this.state.orderForm }\r\n    //     for (let message in messages) {\r\n    //         const updatedFormElement = { ...updatedOrderForm[message.param] };\r\n    //         updatedFormElement.valid = false;\r\n    //         updatedOrderForm[message.param] = updatedFormElement;\r\n    //         console.log('updatedOrderForm=========>');\r\n    //         console.log(updatedOrderForm);\r\n    //     }\r\n    //     this.setState({ orderForm: updatedOrderForm })\r\n    // }\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let msg = null;\r\n        if (this.props.orderResult) {\r\n            msg = (\r\n                this.props.orderResult.success ?\r\n                    <div className={`${classes.MessageBox} ${classes.Green}`}>\r\n                        {this.props.orderResult.message}\r\n                        {this.redirect()}\r\n                    </div>\r\n                    : <div className={`${classes.MessageBox} ${classes.Red}`}>\r\n                        {\r\n                            this.props.orderResult.messages.map((message, i) => {\r\n\r\n                                return (<div className={classes.ErrorItem} key={i}>\r\n                                    <span className={classes.ErrorParam}>{message.param}: </span>\r\n                                    <span className={classes.MessageText}>{message.msg}</span>\r\n                                </div>)\r\n\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className={classes.ContactForm}>\r\n                <h4 className={classes.HeaderForm}>Contact Form</h4>\r\n                {msg}\r\n                <form>\r\n                    {\r\n                        formElementArray.map(formElement => {\r\n                            let inputElement = null;\r\n                            const inputeClasses = [classes.InputElement];\r\n                            if ((!formElement.valid) && formElement.touched) {\r\n                                inputeClasses.push(classes.Invalid);\r\n                            }\r\n                            switch (formElement.config.elementType) {\r\n                                case ('input'):\r\n                                    inputElement = (<input key={formElement.id}\r\n                                        className={`${classes.InputElement} ${!this.state.orderForm[formElement.id].valid && this.state.orderForm[formElement.id].validation && this.state.orderForm[formElement.id].touched ? classes.Invalid : ''}`}\r\n                                        value={formElement.config.value}\r\n                                        placeholder={formElement.config.elementConfig.placeholder}\r\n                                        touched={formElement.touched}\r\n                                        type={formElement.config.elementConfig.type}\r\n                                        onChange={(event) => this.inputChangeHandler(event, formElement.id)} />)\r\n                                    break;\r\n                                case ('select'):\r\n                                    inputElement = (\r\n                                        <select\r\n                                            className={`${classes.InputElement} ${!this.state.orderForm[formElement.id].valid && this.state.orderForm[formElement.id].validation && this.state.orderForm[formElement.id].touched ? classes.Invalid : ''}`}\r\n                                            onChange={(event) => this.inputChangeHandler(event, formElement.id)}\r\n                                            key={formElement.id}\r\n                                            value={formElement.config.value}>\r\n                                            {\r\n                                                formElement.config.elementConfig.options.map((option, i) => (\r\n                                                    <option key={i} value={option.value}>{option.displayValue}</option>\r\n                                                ))\r\n                                            }\r\n                                        </select>)\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            return inputElement;\r\n                        })\r\n                    }\r\n                    <div className={classes.ButtonSection}>\r\n                        <button onClick={this.orderHandler} className={`${classes.Button} ${classes.ButtonSucces}`}>Order</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        orderResult: state.order.order\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactData);","import React, { Component } from 'react';\r\nimport classes from './Checkout.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../../components/Burger/Burger';\r\nimport CheckoutSummary from '../../../components/Burger/CheckoutSammary/CheckoutSummary';\r\nimport ContactData from '../ContactData/ContactData';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n\r\n    // state = {\r\n    //     ingredients: null\r\n    // }\r\n\r\n    // EXTRACT STRING QUERY DATA\r\n    // componentWillMount() {\r\n    //     console.log(\"URLSearchParams=========>\");\r\n    //     console.log(this.props.location);\r\n    //     console.log(this.props);\r\n    //     const query = new URLSearchParams(this.props.location.search);\r\n    //     const ingredients = {};\r\n    //     for (let param of query.entries()) {\r\n    //         // ['salad','1']\r\n    //         ingredients[param[0]] = +param[1];\r\n    //     }\r\n    //     this.setState({\r\n    //         ingredients: ingredients\r\n    //     })\r\n    // }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Aux>\r\n                <Burger ingredients={this.props.ings} />\r\n                <div className={classes.Checkout}>\r\n                    <CheckoutSummary ingredients={this.props.ings}\r\n                        totalPrice={this.props.price}\r\n                        checkoutContinued={this.checkoutContinuedHandler}\r\n                        checkoutCancelled={this.checkoutCancelledHandler} />\r\n                    <Route path={this.props.match.path + '/contact-data'} component={ContactData} />\r\n                    {/* <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        render={() => (<ContactData ingredients={this.props.ings} />)} /> */}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Checkout);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './Order.css'\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\nclass Order extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.onStartInitialize(this.props.match.params.id);\r\n        this.props.onClearBurgerBuilderState();\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     console.log('componentDidMount PROPS ==>');\r\n    //     console.log(this.props);\r\n    // }\r\n\r\n    render() {\r\n        let orderItems = null;\r\n        if (this.props.orderResult && this.props.orderResult.order) {\r\n            orderItems = this.props.orderResult.order.orderItems.map(orderItem => {\r\n                return (\r\n                    <li className={classes.SummaryItem} key={orderItem.item.ingredient}>\r\n                        <div className={classes.SummarySubItem}>\r\n                            <span className={classes.Summary_SubItem} >{orderItem.item.ingredient}</span>\r\n                            <span>({orderItem.item.priceUnit}):</span>\r\n                        </div>\r\n                        <span className={classes.Amount}>{orderItem.item.amount}</span>\r\n                        <span className={classes.Price}>{orderItem.price}</span>\r\n                    </li>\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            this.props.orderResult && this.props.orderResult.order ?\r\n                <div className={classes.OrderBox}>\r\n                    <h3 className={classes.Header}>Your Order</h3>\r\n                    <div className={classes.Order_Info}>\r\n                        <div className={`${classes.Order_Info_Item}`}>Country: {this.props.orderResult.order.country}</div>\r\n                        <div className={classes.Order_Info_Item}>delivery Method: {this.props.orderResult.order.deliveryMethod}</div>\r\n                        <div className={classes.Order_Info_Item}>email: {this.props.orderResult.order.email}</div>\r\n                        <div className={classes.Order_Info_Item}>fullname: {this.props.orderResult.order.fullname}</div>\r\n                        <div className={classes.Order_Info_Item}>zipcode: {this.props.orderResult.order.zipcode}</div>\r\n                        <div className={`${classes.Order_Info_Item} ${classes.FullWidth}`}>street: {this.props.orderResult.order.street}</div>\r\n                    </div>\r\n                    <ul>\r\n                        {orderItems}\r\n                    </ul>\r\n                    <p className={classes.TotalPrice}>Total Price: <span>${parseFloat(this.props.orderResult.order.totalPrice).toFixed(2)}</span></p>\r\n\r\n\r\n                    {/* <div className={classes.ButtonSection}>\r\n                        <button className={`${classes.Button} ${classes.ButtonSucces}`} onClick={this.props.checkoutContinued}>Continue</button>\r\n                        <button className={`${classes.Button} ${classes.ButtonCancel}`} onClick={this.props.checkoutCancelled}>Cancel</button>\r\n                    </div> */}\r\n                </div> : null\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orderResult: state.order.order,\r\n        burgerbuilder: state.burgerBuilder\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onStartInitialize: (orderId) => dispatch(actions.initOrderSuccess(orderId)),\r\n        onClearBurgerBuilderState: () => dispatch(actions.clearBurgerBuilderState())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\n\r\nclass Orders extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>Orders...</h4>\r\n                <Order />\r\n                <Order />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Orders","import React, { Component } from 'react';\nimport Layout from './hoc/Layouts/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout/Checkout';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\n\nimport Order from './components/Order/Order';\n\n// import logo from './logo.svg';\n// import './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path='/checkout' component={Checkout} />\n            <Route path='/orders' exact component={Orders} />\n            <Route path='/order/:id' exact component={Order} />\n            <Route path='/' exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\n\r\n// const initialState = {\r\n//     ingredients: {\r\n//         salad: 0,\r\n//         bacon: 0,\r\n//         cheese: 0,\r\n//         meat: 0\r\n//     },\r\n//     totalPrice: 4\r\n// }\r\nconst initialState = {\r\n    ingredients: {\r\n        salad: {\r\n            price: 0,\r\n            amount: 0,\r\n            priceUnit: 0.47\r\n        },\r\n        bacon: {\r\n            price: 0,\r\n            amount: 0,\r\n            priceUnit: 0.87\r\n        },\r\n        cheese: {\r\n            price: 0,\r\n            amount: 0,\r\n            priceUnit: 0.34\r\n        },\r\n        meat: {\r\n            price: 0,\r\n            amount: 0,\r\n            priceUnit: 1.12\r\n        }\r\n    },\r\n    totalPrice: 4\r\n}\r\n// const PRICE_INGREDIENTS = {\r\n//     salad: 0.47,\r\n//     bacon: 0.87,\r\n//     meat: 1.79,\r\n//     cheese: 0.43,\r\n// }\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: {\r\n                        amount: state.ingredients[action.ingredientName].amount + 1,\r\n                        price: parseFloat(state.ingredients[action.ingredientName].price) + state.ingredients[action.ingredientName].priceUnit,  //PRICE_INGREDIENTS[action.ingredientName]\r\n                        priceUnit: state.ingredients[action.ingredientName].priceUnit\r\n                    }\r\n                },\r\n                // val: state.ingredients[action.ingredientName].amount,\r\n                totalPrice: parseFloat(state.totalPrice) + state.ingredients[action.ingredientName].priceUnit  //PRICE_INGREDIENTS[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: {\r\n                        amount: state.ingredients[action.ingredientName].amount - 1,\r\n                        price: parseFloat(state.ingredients[action.ingredientName].price) > 0 ? parseFloat(state.ingredients[action.ingredientName].price).toFixed(2) - state.ingredients[action.ingredientName].priceUnit : 0,\r\n                        priceUnit: state.ingredients[action.ingredientName].priceUnit\r\n                    }\r\n                },\r\n                // val: 2,\r\n                // totalPrice: state.totalPrice  //PRICE_INGREDIENTS[action.ingredientName]\r\n                totalPrice: parseFloat(state.totalPrice) - state.ingredients[action.ingredientName].priceUnit\r\n            };\r\n        case actionTypes.CLEAR_BURGER_BUILDER_STATE:\r\n            return { ...state, ...initialState }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    // orders: [],\r\n    loading: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_BURGER_START: {\r\n            return {\r\n                ...state,\r\n                order: null\r\n            }\r\n        }\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            // const newOrder = { ...action.orderData, id: action.orderId }\r\n            return {\r\n                ...state,\r\n                order: action.order   //state.orders.concat(newOrder)\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk'\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n// import reducer from './store/reducer';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\n\nimport orderReducer from './store/reducers/order';\n\n// const store = createStore(reducer);\n// FOR REDUX DEV TOOL FOR DEBUGGING\n// const store = createStore(burgerBuilderReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n})\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputElement\":\"ContactData_InputElement__2wrFb\",\"Invalid\":\"ContactData_Invalid__aEbV4\",\"ContactForm\":\"ContactData_ContactForm__2pVy7\",\"HeaderForm\":\"ContactData_HeaderForm__1HkmI\",\"Button\":\"ContactData_Button__113LT\",\"ButtonSucces\":\"ContactData_ButtonSucces__1UUEb\",\"ButtonCancel\":\"ContactData_ButtonCancel__2I2PB\",\"ButtonSection\":\"ContactData_ButtonSection__2gPGf\",\"MessageBox\":\"ContactData_MessageBox__3ibSa\",\"Red\":\"ContactData_Red__3uHHz\",\"Green\":\"ContactData_Green__1PiPq\",\"ErrorParam\":\"ContactData_ErrorParam__2Oz6a\",\"ErrorItem\":\"ContactData_ErrorItem__5Zj-X\",\"MessageText\":\"ContactData_MessageText__3l1ct\"};"],"sourceRoot":""}